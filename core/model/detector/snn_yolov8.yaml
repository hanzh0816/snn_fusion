# Ultralytics YOLO 🚀, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 2 # number of classes
scales: # model compound scaling constants, i.e. 'model=snn_yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

##coco 0.476 t1 19.3m voc 0.779
#backbone:
#  -  [-1, 1, MS_GetT, [3,1]]  #仅用于增加T               #0 [1,3,256,256]->[1,1,3,256,256]
#  -  [-1, 1, MS_DownSampling, [128, 7, 4, 2, True]]    #1 [1,1,3,256,256]->[1,1,128,64,64]  第一处改动
#  -  [-1, 2, MS_ConvBlock, [4]]                        #2 [1,1,128,64,64]->[1,1,128,64,64]
#  -  [-1, 1, MS_DownSampling, [256, 3, 2, 1, False]]   #3 [1,1,128,64,64]->[1,1,256,32,32]
#  -  [-1, 2, MS_ConvBlock, [4]]                        #4 [1,1,256,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_DownSampling, [512, 3, 2, 1, False]]   #5 [1,1,256,32,32]->[1,1,512,16,16]
#  -  [-1, 8, MS_Block, [8, 4]]                         #6 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [-1, 1, MS_DownSampling, [1024, 3, 2, 1, False]]  #7 [1,1,512,16,16]->[1,1,1024,8,8]
#  -  [-1, 1, MS_Block, [8, 4]]                         #8 [1,1,1024,8,8]->[1,1,1024,8,8]
#  -  [-1, 1, SpikeSPPF, [1024, 5]]                        #9 [1,1024,8,8]->[1,1024,8,8]
#
#
#head:
#  - [-1, 1, MS_StandardConv, [512,3,1]]                   #10 [1,1,1024,8,8]->[1,1,512,8,8]  #
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #11 [1,1,512,8,8]->[1,1,512,16,16]
#  -  [ -1, 1, MS_ConvBlock, [4]]                          #12 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [[-1, 6], 1, Concat, [2]]  # cat backbone P4         #13 [1,1,512,16,16]+[1,1,512,16,16] == [1,1,1024,16,16]  #二者均受wider系数操控
#  -  [-1, 1, MS_StandardConv, [256,3,1]]                  #14 [1,1,1024,16,16]->[1,1,256,16,16]
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #15 [1,1,256,16,16]->[1,1,256,32,32]
#  -  [[-1, 4], 1, Concat, [2]]  # cat backbone P3         #16 [1,1,256,32,32]+[1,1,256,32,32] == [1,1,512,32,32]
#  -  [-1, 1, MS_StandardConv, [256,3,1]]                  #17 [1,1,512,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_ConvBlock, [4]]                           #18 [1,1,256,32,32]->[1,1,256,32,32]   输出层
#
#  -  [-1, 1, MS_StandardConv, [256,3,2]]                  #19 [1,1,256,32,32]->[1,1,256,16,16]
#  -  [[-1, 14], 1, Concat, [2]]  # cat head P4            #20  [1,1,256,16,16]+[1,1,256,16,16] == [1,1,512,16,16]
#  -  [-1, 1, MS_ConvBlock, [2]]                           #21 [1,1,512,16,16]->[1,1,512,16,16]     输出层
#
#
#  -  [-1, 1, MS_StandardConv, [512,3,2]]                  #22 [1,1,512,16,16]->[1,1,512,8,8]
#  -  [[-1, 10], 1, Concat, [2]]  # cat head P5             #23 [1,1,512,8,8]+[1,1,512,8,8] == [1,1,1024,8,8]
#  -  [-1, 1, MS_ConvBlock, [1]]   # 23 (P5/32-large)      #24 [1,1,1024,8,8]->[1,1,1024,8,8]  输出层             #C3层实际输出通道数为args[0]*缩放系数
#  -  [[18, 21, 24], 1, SpikeDetect, [nc]]             #25 [1,1,1024,8,8]->[1,3,32,32,25] and [1,3,16,16,25] and [1,3,8,8,25]   # Detect(P3, P4, P5)

##voc 卷积核3改为1 16.8m
#backbone:
#  -  [-1, 1, MS_GetT, [3,1]]  #仅用于增加T               #0 [1,3,256,256]->[1,1,3,256,256]
#  -  [-1, 1, MS_DownSampling, [128, 7, 4, 2, True]]    #1 [1,1,3,256,256]->[1,1,128,64,64]  第一处改动
#  -  [-1, 2, MS_ConvBlock, [4]]                        #2 [1,1,128,64,64]->[1,1,128,64,64]
#  -  [-1, 1, MS_DownSampling, [256, 3, 2, 1, False]]   #3 [1,1,128,64,64]->[1,1,256,32,32]
#  -  [-1, 2, MS_ConvBlock, [4]]                        #4 [1,1,256,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_DownSampling, [512, 3, 2, 1, False]]   #5 [1,1,256,32,32]->[1,1,512,16,16]
#  -  [-1, 8, MS_Block, [8, 4]]                         #6 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [-1, 1, MS_DownSampling, [1024, 3, 2, 1, False]]  #7 [1,1,512,16,16]->[1,1,1024,8,8]
#  -  [-1, 1, MS_Block, [8, 4]]                         #8 [1,1,1024,8,8]->[1,1,1024,8,8]
#  -  [-1, 1, SpikeSPPF, [1024, 5]]                        #9 [1,1024,8,8]->[1,1024,8,8]
#
#
#head:
#  - [-1, 1, MS_StandardConv, [512,1,1]]                   #10 [1,1,1024,8,8]->[1,1,512,8,8]  #
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #11 [1,1,512,8,8]->[1,1,512,16,16]
#  -  [ -1, 1, MS_ConvBlock, [4]]                          #12 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [[-1, 6], 1, Concat, [2]]  # cat backbone P4         #13 [1,1,512,16,16]+[1,1,512,16,16] == [1,1,1024,16,16]  #二者均受wider系数操控
#  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #14 [1,1,1024,16,16]->[1,1,256,16,16]
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #15 [1,1,256,16,16]->[1,1,256,32,32]
#  -  [[-1, 4], 1, Concat, [2]]  # cat backbone P3         #16 [1,1,256,32,32]+[1,1,256,32,32] == [1,1,512,32,32]
#  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #17 [1,1,512,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_ConvBlock, [4]]                           #18 [1,1,256,32,32]->[1,1,256,32,32]   输出层
#
#  -  [-1, 1, MS_StandardConv, [256,1,2]]                  #19 [1,1,256,32,32]->[1,1,256,16,16]
#  -  [[-1, 14], 1, Concat, [2]]  # cat head P4            #20  [1,1,256,16,16]+[1,1,256,16,16] == [1,1,512,16,16]
#  -  [-1, 1, MS_ConvBlock, [2]]                           #21 [1,1,512,16,16]->[1,1,512,16,16]     输出层
#
#
#  -  [-1, 1, MS_StandardConv, [512,1,2]]                  #22 [1,1,512,16,16]->[1,1,512,8,8]
#  -  [[-1, 10], 1, Concat, [2]]  # cat head P5             #23 [1,1,512,8,8]+[1,1,512,8,8] == [1,1,1024,8,8]
#  -  [-1, 1, MS_ConvBlock, [1]]   # 23 (P5/32-large)      #24 [1,1,1024,8,8]->[1,1,1024,8,8]  输出层             #C3层实际输出通道数为args[0]*缩放系数
#  -  [[18, 21, 24], 1, SpikeDetect, [nc]]             #25 [1,1,1024,8,8]->[1,3,32,32,25] and [1,3,16,16,25] and [1,3,8,8,25]   # Detect(P3, P4, P5)
#

## coco0.499 18.8M
#backbone:
#  -  [-1, 1, MS_GetT, [3,1]]  #仅用于增加T               #0 [1,3,256,256]->[1,1,3,256,256]
#  -  [-1, 1, MS_DownSampling, [128, 7, 4, 2, True]]     #1 [1,1,3,256,256]->[1,1,128,64,64]  第一处改动
#  -  [-1, 2, MS_ConvBlock, [4]]                        #2 [1,1,128,64,64]->[1,1,128,64,64]
#  -  [-1, 1, MS_DownSampling, [256, 3, 2, 1, False]]   #3 [1,1,128,64,64]->[1,1,256,32,32]
#  -  [-1, 2, MS_ConvBlock, [4]]                        #4 [1,1,256,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_DownSampling, [512, 3, 2, 1, False]]   #5 [1,1,256,32,32]->[1,1,512,16,16]
#  -  [-1, 8, MS_ConvBlock, [3]]                         #6 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [-1, 1, MS_DownSampling, [1024, 3, 2, 1, False]]  #7 [1,1,512,16,16]->[1,1,1024,8,8]
#  -  [-1, 1, MS_ConvBlock, [2]]                         #8 [1,1,1024,8,8]->[1,1,1024,8,8]
#  -  [-1, 1, SpikeSPPF, [1024, 5]]                        #9 [1,1024,8,8]->[1,1024,8,8]
#
#
#
#head:
#  - [-1, 1, MS_StandardConv, [512,1,1]]                   #10 [1,1,1024,8,8]->[1,1,512,8,8]  #
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #11 [1,1,512,8,8]->[1,1,512,16,16]
#  -  [ -1, 1, MS_ConvBlock, [4]]                          #12 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [[-1, 6], 1, Concat, [2]]  # cat backbone P4         #13 [1,1,512,16,16]+[1,1,512,16,16] == [1,1,1024,16,16]  #二者均受wider系数操控
#  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #14 [1,1,1024,16,16]->[1,1,256,16,16]
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #15 [1,1,256,16,16]->[1,1,256,32,32]
#  -  [[-1, 4], 1, Concat, [2]]  # cat backbone P3         #16 [1,1,256,32,32]+[1,1,256,32,32] == [1,1,512,32,32]
#  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #17 [1,1,512,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_ConvBlock, [4]]                           #18 [1,1,256,32,32]->[1,1,256,32,32]   输出层
#
#  -  [-1, 1, MS_StandardConv, [256,1,2]]                  #19 [1,1,256,32,32]->[1,1,256,16,16]
#  -  [[-1, 14], 1, Concat, [2]]  # cat head P4            #20  [1,1,256,16,16]+[1,1,256,16,16] == [1,1,512,16,16]
#  -  [-1, 1, MS_ConvBlock, [2]]                           #21 [1,1,512,16,16]->[1,1,512,16,16]     输出层
#
#
#  -  [-1, 1, MS_StandardConv, [512,1,2]]                  #22 [1,1,512,16,16]->[1,1,512,8,8]
#  -  [[-1, 10], 1, Concat, [2]]  # cat head P5             #23 [1,1,512,8,8]+[1,1,512,8,8] == [1,1,1024,8,8]
#  -  [-1, 1, MS_ConvBlock, [1]]   # 23 (P5/32-large)      #24 [1,1,1024,8,8]->[1,1,1024,8,8]  输出层             #C3层实际输出通道数为args[0]*缩放系数
#  -  [[18, 21, 24], 1, SpikeDetect, [nc]]             #25 [1,1,1024,8,8]->[1,3,32,32,25] and [1,3,16,16,25] and [1,3,8,8,25]   # Detect(P3, P4, P5)

#0.623
backbone:
  - [-1, 1, MS_GetT, [3, 1]] #仅用于增加T               #0 [1,3,256,256]->[1,1,3,256,256]
  - [-1, 1, MS_DownSampling, [128, 7, 4, 2, True]] #1 [1,1,3,256,256]->[1,1,128,64,64]  第一处改动
  - [-1, 3, MS_AllConvBlock, [4, 7]] #2 [1,1,128,64,64]->[1,1,128,64,64]
  #   -  [-1, 3, MS_ConvBlock_res2net, [128,4,4,3]]                        #2 [1,1,128,64,64]->[1,1,128,64,64]
  - [-1, 1, MS_DownSampling, [256, 3, 2, 1, False]] #3 [1,1,128,64,64]->[1,1,256,32,32]
  - [-1, 6, MS_AllConvBlock, [4, 7]] #4 [1,1,256,32,32]->[1,1,256,32,32]
  - [-1, 1, MS_DownSampling, [512, 3, 2, 1, False]] #5 [1,1,256,32,32]->[1,1,512,16,16]
  - [-1, 9, MS_ConvBlock, [3, 7]] #6 [1,1,512,16,16]->[1,1,512,16,16]
  - [-1, 1, MS_DownSampling, [1024, 3, 2, 1, False]] #7 [1,1,512,16,16]->[1,1,1024,8,8]
  - [-1, 1, MS_ConvBlock, [2, 7]] #8 [1,1,1024,8,8]->[1,1,1024,8,8]
  - [-1, 1, SpikeSPPF, [1024, 5]] #9 [1,1024,8,8]->[1,1024,8,8]

head:
  - [-1, 1, MS_StandardConv, [512, 1, 1]] #10 [1,1,1024,8,8]->[1,1,512,8,8]  #
  - [-1, 1, nn.Upsample, [None, "(1,2,2)", "nearest"]] #11 [1,1,512,8,8]->[1,1,512,16,16]
  - [-1, 1, MS_ConvBlock, [3, 7]] #12 [1,1,512,16,16]->[1,1,512,16,16]
  - [[-1, 6], 1, Concat, [2]] # cat backbone P4         #13 [1,1,512,16,16]+[1,1,512,16,16] == [1,1,1024,16,16]  #二者均受wider系数操控

  - [-1, 1, MS_StandardConv, [256, 1, 1]] #14 [1,1,1024,16,16]->[1,1,256,16,16]
  - [-1, 1, nn.Upsample, [None, "(1,2,2)", "nearest"]] #15 [1,1,256,16,16]->[1,1,256,32,32]
  - [-1, 1, MS_AllConvBlock, [4, 7]] #15.5 [1,1,256,16,16]->[1,1,256,16,16]

  - [[-1, 4], 1, Concat, [2]] # cat backbone P3         #16 [1,1,256,32,32]+[1,1,256,32,32] == [1,1,512,32,32]
  - [-1, 1, MS_StandardConv, [256, 1, 1]] #17 [1,1,512,32,32]->[1,1,256,32,32]
  - [-1, 1, MS_AllConvBlock, [4, 7]] #18 [1,1,256,32,32]->[1,1,256,32,32]   输出层

  - [-1, 1, MS_StandardConv, [256, 3, 2]] #19 [1,1,256,32,32]->[1,1,256,16,16]
  - [[-1, 14], 1, Concat, [2]] # cat head P4            #20  [1,1,256,16,16]+[1,1,256,16,16] == [1,1,512,16,16]
  - [-1, 1, MS_ConvBlock, [3, 7]] #21 [1,1,512,16,16]->[1,1,512,16,16]     输出层

  - [-1, 1, MS_StandardConv, [512, 3, 2]] #22 [1,1,512,16,16]->[1,1,512,8,8]
  - [[-1, 10], 1, Concat, [2]] # cat head P5             #23 [1,1,512,8,8]+[1,1,512,8,8] == [1,1,1024,8,8]
  - [-1, 1, MS_ConvBlock, [1, 7]] # 23 (P5/32-large)      #24 [1,1,1024,8,8]->[1,1,1024,8,8]  输出层             #C3层实际输出通道数为args[0]*缩放系数

  - [[19, 22, 25], 1, SpikeDetect, [nc]] #25 [1,1,1024,8,8]->[1,3,32,32,25] and [1,3,16,16,25] and [1,3,8,8,25]   # Detect(P3, P4, P5)

#
## coco 新，改动为6,12,24行
#backbone:
#  -  [-1, 1, MS_GetT, [3,1]]  #仅用于增加T               #0 [1,3,256,256]->[1,1,3,256,256]
#  -  [-1, 1, MS_DownSampling, [128, 7, 4, 2, True]]     #1 [1,1,3,256,256]->[1,1,128,64,64]  第一处改动
#  -  [-1, 2, MS_ConvBlock, [4,7,True]]                        #2 [1,1,128,64,64]->[1,1,128,64,64]
#  -  [-1, 1, MS_DownSampling, [256, 3, 2, 1, False]]   #3 [1,1,128,64,64]->[1,1,256,32,32]
#  -  [-1, 2, MS_ConvBlock, [4,7,True]]                        #4 [1,1,256,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_DownSampling, [512, 3, 2, 1, False]]   #5 [1,1,256,32,32]->[1,1,512,16,16]
#  -  [-1, 8, MS_ConvBlock, [3,7]]                         #6 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [-1, 1, MS_DownSampling, [1024, 3, 2, 1, False]]  #7 [1,1,512,16,16]->[1,1,1024,8,8]
#  -  [-1, 1, MS_ConvBlock, [2,7]]                         #8 [1,1,1024,8,8]->[1,1,1024,8,8]
#  -  [-1, 1, SpikeSPPF, [1024, 5]]                        #9 [1,1024,8,8]->[1,1024,8,8]
#
#
#
#head:
#  - [-1, 1, MS_StandardConv, [512,1,1]]                   #10 [1,1,1024,8,8]->[1,1,512,8,8]  #
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #11 [1,1,512,8,8]->[1,1,512,16,16]
#
#  -  [ -1, 1, MS_ConvBlock, [4,7,True]]                          #12 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [[-1, 6], 1, Concat, [2]]  # cat backbone P4         #13 [1,1,512,16,16]+[1,1,512,16,16] == [1,1,1024,16,16]  #二者均受wider系数操控
#
#  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #14 [1,1,1024,16,16]->[1,1,256,16,16]
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #15 [1,1,256,16,16]->[1,1,256,32,32]
#
#
#  -  [[-1, 4], 1, Concat, [2]]  # cat backbone P3         #16 [1,1,256,32,32]+[1,1,256,32,32] == [1,1,512,32,32]
#  -  [-1, 1, MS_StandardConv, [256,1,1]]                  #17 [1,1,512,32,32]->[1,1,256,32,32]
#  -  [-1, 1, MS_ConvBlock, [4,7]]                           #18 [1,1,256,32,32]->[1,1,256,32,32]   输出层
#
#  -  [-1, 1, MS_StandardConv, [256,1,2]]                  #19 [1,1,256,32,32]->[1,1,256,16,16]
#  -  [[-1, 14], 1, Concat, [2]]  # cat head P4            #20  [1,1,256,16,16]+[1,1,256,16,16] == [1,1,512,16,16]
#  -  [-1, 1, MS_ConvBlock, [2,7]]                           #21 [1,1,512,16,16]->[1,1,512,16,16]     输出层
#
#
#  -  [-1, 1, MS_StandardConv, [512,1,2]]                  #22 [1,1,512,16,16]->[1,1,512,8,8]
#  -  [[-1, 10], 1, Concat, [2]]  # cat head P5             #23 [1,1,512,8,8]+[1,1,512,8,8] == [1,1,1024,8,8]
#  -  [-1, 1, MS_ConvBlock, [1,7]]   # 23 (P5/32-large)      #24 [1,1,1024,8,8]->[1,1,1024,8,8]  输出层             #C3层实际输出通道数为args[0]*缩放系数
#
#  -  [[18, 21, 24], 1, SpikeDetect, [nc]]             #25 [1,1,1024,8,8]->[1,3,32,32,25] and [1,3,16,16,25] and [1,3,8,8,25]   # Detect(P3, P4, P5)

## 纯ANN 版本
#backbone:
#  -  [-1, 1, MS_GetT, [3,1]]  #仅用于增加T               #0 [1,3,256,256]->[1,1,3,256,256]
#  -  [-1, 1, Ann_DownSampling, [128, 7, 4, 2, True]]     #1 [1,1,3,256,256]->[1,1,128,64,64]  第一处改动
#  -  [-1, 2, Ann_ConvBlock, [4,7]]                        #2 [1,1,128,64,64]->[1,1,128,64,64]
#  -  [-1, 1, Ann_DownSampling, [256, 3, 2, 1, False]]   #3 [1,1,128,64,64]->[1,1,256,32,32]
#  -  [-1, 2, Ann_ConvBlock, [4,7]]                        #4 [1,1,256,32,32]->[1,1,256,32,32]
#  -  [-1, 1, Ann_DownSampling, [512, 3, 2, 1, False]]   #5 [1,1,256,32,32]->[1,1,512,16,16]
#  -  [-1, 8, Ann_ConvBlock, [3,7]]                         #6 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [-1, 1, Ann_DownSampling, [1024, 3, 2, 1, False]]  #7 [1,1,512,16,16]->[1,1,1024,8,8]
#  -  [-1, 1, Ann_ConvBlock, [2,7]]                         #8 [1,1,1024,8,8]->[1,1,1024,8,8]
#  -  [-1, 1, Ann_SPPF, [1024, 5]]                        #9 [1,1024,8,8]->[1,1024,8,8]
#
#
#
#head:
#  - [-1, 1, Ann_StandardConv, [512,1,1]]                   #10 [1,1,1024,8,8]->[1,1,512,8,8]  #
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #11 [1,1,512,8,8]->[1,1,512,16,16]
#
#  -  [ -1, 1, Ann_ConvBlock, [4,7]]                          #12 [1,1,512,16,16]->[1,1,512,16,16]
#  -  [[-1, 6], 1, Concat, [2]]  # cat backbone P4         #13 [1,1,512,16,16]+[1,1,512,16,16] == [1,1,1024,16,16]  #二者均受wider系数操控
#
#  -  [-1, 1, Ann_StandardConv, [256,1,1]]                  #14 [1,1,1024,16,16]->[1,1,256,16,16]
#  -  [-1, 1, nn.Upsample, [None, '(1,2,2)', 'nearest']]   #15 [1,1,256,16,16]->[1,1,256,32,32]
#
#
#  -  [[-1, 4], 1, Concat, [2]]  # cat backbone P3         #16 [1,1,256,32,32]+[1,1,256,32,32] == [1,1,512,32,32]
#  -  [-1, 1, Ann_StandardConv, [256,1,1]]                  #17 [1,1,512,32,32]->[1,1,256,32,32]
#  -  [-1, 1, Ann_ConvBlock, [4,7]]                           #18 [1,1,256,32,32]->[1,1,256,32,32]   输出层
#
#  -  [-1, 1, Ann_StandardConv, [256,1,2]]                  #19 [1,1,256,32,32]->[1,1,256,16,16]
#  -  [[-1, 14], 1, Concat, [2]]  # cat head P4            #20  [1,1,256,16,16]+[1,1,256,16,16] == [1,1,512,16,16]
#  -  [-1, 1, Ann_ConvBlock, [2,7]]                           #21 [1,1,512,16,16]->[1,1,512,16,16]     输出层
#
#
#  -  [-1, 1, Ann_StandardConv, [512,1,2]]                  #22 [1,1,512,16,16]->[1,1,512,8,8]
#  -  [[-1, 10], 1, Concat, [2]]  # cat head P5             #23 [1,1,512,8,8]+[1,1,512,8,8] == [1,1,1024,8,8]
#  -  [-1, 1, Ann_ConvBlock, [1,7]]   # 23 (P5/32-large)      #24 [1,1,1024,8,8]->[1,1,1024,8,8]  输出层             #C3层实际输出通道数为args[0]*缩放系数
#
#  -  [[18, 21, 24], 1, Detect, [nc]]             #25 [1,1,1024,8,8]->[1,3,32,32,25] and [1,3,16,16,25] and [1,3,8,8,25]   # Detect(P3, P4, P5)
#
